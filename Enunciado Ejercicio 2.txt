Ejercicio 2
Entregar ficheros: practica.c
No subir ficheros comprimidos.
Las pruebas unitarias de esta práctica solo funcionarán en la máquina virtual oficial de la asignatura.
Dada la siguiente definición de una estructura de datos correspondiente a una lista enlazada (Lista) definida en el fichero practica.h:

typedef struct Nodo{
    int dato;
    struct Nodo* siguiente;
} Nodo;

typedef Nodo* Lista;
Implementar en el fichero practica.c los siguientes subalgoritmo:

void vacia( Lista* lista );
Crea un lista enlazada de números enteros vacía
Parámetros:
  lista :    estructura de datos



void almacenaValor( Lista* lista, int valor, bool* ok );
Almacena un valor al final de la lista
Parámetros:
  lista :    lista enlazada donde almacenar el valor al final
  valor :     valor que se almacena
  ok :        devuelve verdadero si se pudo almacenar el valor. Falso en caso contrario



int obtieneValor( Lista lista, unsigned pos, bool* ok );
Obtiene un valor en una posición de la lista
Parámetros:
  lista :  lista enlazada
  pos :    posición que se quiere devolver
  ok  :    devuelve verdadero si la posición es válida. Falso en caso contrario
Devuelve:
  Valor almacenado en la lista en la posición recibida o 0 si la posición no es válida



int sumaValores( Lista lista );
Suma todos los valores almacenados en la lista
Parámetros:
  lista :    lista enlazada
Devuelve:
  La suma de todos los elementos almacenados en la lista



unsigned longitud( Lista lista );
Devuelve cuantos números hay en la lista
Parámetros:
  lista :   lista enlazada
Devuelve:
  El número de nodos de la lista



void liberaLista( Lista* lista );
Libera la memoria asignada a la lista. Debe dejar el puntero de la lista a NULL

